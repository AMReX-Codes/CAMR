
// This file is automatically created by parse_CAMR_params.py.  To update
// or add runtime parameters, please edit _cpp_parameters and then run
// mk_params.sh

pp.query("state_nghost", state_nghost);
pp.query("do_reflux", do_reflux);
pp.query("refine_cut_cells", refine_cut_cells);
pp.query("difmag", difmag);
pp.query("small", small);
pp.query("small_dens", small_dens);
pp.query("small_temp", small_temp);
pp.query("small_pres", small_pres);
pp.query("do_mol", do_mol);
pp.query("do_react", do_react);
pp.query("add_ext_src", add_ext_src);
pp.query("add_grav_src", add_grav_src);
pp.query("const_grav", const_grav);
pp.query("ppm_type", ppm_type);
pp.query("ppm_trace_sources", ppm_trace_sources);
pp.query("plm_iorder", plm_iorder);
pp.query("use_flattening", use_flattening);
pp.query("dual_energy_update_E_from_e", dual_energy_update_E_from_e);
pp.query("dual_energy_eta1", dual_energy_eta1);
pp.query("dual_energy_eta2", dual_energy_eta2);
pp.query("use_pslope", use_pslope);
pp.query("allow_negative_energy", allow_negative_energy);
pp.query("allow_small_energy", allow_small_energy);
pp.query("transverse_reset_density", transverse_reset_density);
pp.query("eb_weights_type", eb_weights_type);
pp.query("redistribution_type", redistribution_type);
pp.query("fixed_dt", fixed_dt);
pp.query("initial_dt", initial_dt);
pp.query("dt_cutoff", dt_cutoff);
pp.query("max_dt", max_dt);
pp.query("cfl", cfl);
pp.query("init_shrink", init_shrink);
pp.query("change_max", change_max);
pp.query("bndry_func_thread_safe", bndry_func_thread_safe);
pp.query("sum_interval", sum_interval);
pp.query("sum_per", sum_per);
pp.query("job_name", job_name);
pp.query("write_eb", write_eb);
