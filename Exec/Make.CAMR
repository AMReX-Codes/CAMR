TOP ?= $(CAMR_HOME)

EBASE = CAMR

#Turn off all fortran in amrex
BL_NO_FORT = TRUE

include $(AMREX_HOME)/Tools/GNUMake/Make.defs

ifeq ($(USE_EB), TRUE)
  DEFINES += -DAMREX_USE_EB
  USERSuffix += .EB
endif

ifeq ($(USE_MOVING_EB), TRUE)
  DEFINES += -DAMREX_USE_MOVING_EB
endif

all: $(executable)
ifneq ($(KEEP_BUILDINFO_CPP),TRUE)
	$(SILENT) $(RM) AMReX_buildInfo.cpp
endif
	@echo SUCCESS

ifeq ($(Eos_Model),$(filter $(Eos_Model),GammaLaw))
   DEFINES += -DUSE_GAMMALAW_EOS
   EOS_DIR = GammaLaw
endif
ifeq ($(Eos_Model),$(filter $(Eos_Model),TableEOS))
   DEFINES += -DUSE_TABLE_EOS
   EOS_DIR = TableEOS
endif
Bdirs := $(CAMR_HOME)/Source
Bdirs += $(CAMR_HOME)/Source/Hydro
Bdirs += $(CAMR_HOME)/Source/Hydro/Godunov
Bdirs += $(CAMR_HOME)/Source/Hydro/MOL
Bdirs += $(CAMR_HOME)/Source/Utils
Bdirs += $(CAMR_HOME)/Source/EOS/$(EOS_DIR) $(CAMR_HOME)/Source/EOS
Bdirs += $(CAMR_HOME)/Source/Params/param_includes

Pdirs := Base Amr Boundary AmrCore
ifeq ($(USE_EB), TRUE)
  Pdirs += EB
  Bdirs += $(CAMR_HOME)/Source/EB
endif

Bpack += $(foreach dir, $(Pdirs), $(AMREX_HOME)/Src/$(dir)/Make.package)
Blocs += $(foreach dir, $(Pdirs), $(AMREX_HOME)/Src/$(dir))

Bpack += $(foreach dir, $(Bdirs), $(dir)/Make.package)
Blocs += $(foreach dir, $(Bdirs), $(dir))

$(info $${Blocs} is [${Blocs}])

include $(Bpack)

INCLUDE_LOCATIONS += $(Blocs)
VPATH_LOCATIONS   += $(Blocs)

CEXE_sources += AMReX_buildInfo.cpp
CEXE_headers += $(AMREX_HOME)/Tools/C_scripts/AMReX_buildInfo.H
INCLUDE_LOCATIONS += $(AMREX_HOME)/Tools/C_scripts

AMReX_buildInfo.cpp:
	$(AMREX_HOME)/Tools/C_scripts/makebuildinfo_C.py \
          --amrex_home "$(AMREX_HOME)" \
          --COMP "$(COMP)" --COMP_VERSION "$(COMP_VERSION)" \
          --FCOMP "$(FCOMP)" --FCOMP_VERSION "$(FCOMP_VERSION)" \
          --MODULES "$(MNAMES)" \
          --GIT "$(TOP) $(AMREX_HOME)"

include $(AMREX_HOME)/Tools/GNUMake/Make.rules

clean::
	$(SILENT) $(RM) AMReX_buildInfo.cpp

#-----------------------------------------------------------------------------
# for debugging.  To see the value of a Makefile variable,
# e.g. Fmlocs, simply do "make print-Fmlocs".  This will
# print out the value.
#print-%: ; @echo $* is $($*) ; $(SILENT) $(RM) AMReX_buildInfo.cpp
